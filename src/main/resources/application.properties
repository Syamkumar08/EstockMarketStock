#mongo
spring.data.mongodb.uri=mongodb+srv://syamkumar:S246yam^@stock.isdl6kl.mongodb.net/test?retryWrites=true&w=majority
spring.data.mongodb.database=stockmarket

spring.datasource.url=jdbc:mysql://estockmarketforcompany.mysql.database.azure.com:3306/stockmarket?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
spring.datasource.username=syam@estockmarketforcompany
spring.datasource.password=S246yam^
spring.jpa.hibernate.ddl-auto=update
server.port=8082
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.hikari.max-lifetime= 60000000

#kafka
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.batch-size=100000
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=StockApp
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

#log
logging.file.path=./config/logs
logging.file.name=${logging.file.path}/appLog.log
logging.level.root=INFO

#To work with docker hub
#axon.axonserver.servers=host.docker.internal:8124

#Azure Axon server Azure container instance
#axon.axonserver.servers=ems-axon.eastus.azurecontainer.io:8124
axon.axonserver.servers=20.220.245.4:8124

      
